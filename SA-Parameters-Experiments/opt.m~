traindata = csvread('train.csv');
testdata = csvread('test.csv');
m = length(traindata);
% data format: 
% 1, 2: user indexes
% 3: action
% 4, 5: genders
% 6, 7: buckets
% 8, 9: user ids

% unique users
[C, ia] = unique(traindata(:, 1));
users = traindata(ia, [1,4,8]);
n = length(users);

% initialize parameters
x0 = ones(n, 2);
total = ones(n ,2);
for i = 1:m
    line = traindata(i, :);
    u1 = line(1);
    u2 = line(2);
    like = line(3);
    if like
        x0(u1, 1) = x0(u1, 1) + 1;
        x0(u2, 2) = x0(u2, 2) + 1;
    end
    total(u1, 1) = total(u1, 1) + 1;
    total(u2, 2) = total(u2, 2) + 1;
end
x0 = x0 ./ total;

% optimize parameters
options = optimoptions('fminunc','Algorithm','trust-region','GradObj','on', 'Display', 'iter');
C = 8;
func = @(x) reg_LL(traindata, x, C);
x = fminunc(func, x0, options);

% test Params
test_sa = 

% user parameters:
userParams = [users';x']';
maleParams = userParams(userParams(:,2) == 1, 3:5);
femaleParams = userParams(userParams(:,2) == 0, 3:5);

% stats
male_mean = mean(maleParams(:, 2:3));
female_mean = mean(femaleParams(:, 2:3));
male_std = std(maleParams(:, 2:3));
female_std = std(femaleParams(:, 2:3));